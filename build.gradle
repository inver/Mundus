import org.jetbrains.kotlin.gradle.dsl.JvmTarget
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    ext.kotlinVersion = '1.8.21'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.9.11'
    }
}

allprojects {
    apply from: "$rootDir/gradle/dependencies.gradle"

    apply plugin: "jacoco"
    apply plugin: 'info.solidsoft.pitest'
    apply plugin: 'checkstyle'
    apply plugin: "java"

    ext {
        appName = "Abyssus"
        appVersion = "0.3.0"

        gdxVersion = '1.11.0'
        visuiVersion = '1.5.1'
        kryoVersion = '5.2.0'
        gltfVersion = 'master-SNAPSHOT'
    }

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        compileOnly libs.lombok
        annotationProcessor libs.lombok
        testCompileOnly libs.lombok
        testAnnotationProcessor libs.lombok

        implementation libs.commons_io
        implementation libs.commons_lang3
        implementation libs.commons_collections4
        implementation libs.slf4j_api
        implementation libs.jackson_databind
        implementation libs.jackson_annotations
    }

    tasks.withType(Checkstyle).configureEach {
        reports {
            xml.required = false
            html.required = true
            html.stylesheet resources.text.fromFile('../config/xsl/checkstyle-custom.xsl')
        }
    }

    tasks.withType(JavaCompile).configureEach {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
        options.encoding = "UTF-8"
    }

    tasks.withType(KotlinCompile).configureEach {
        compilerOptions {
            jvmTarget.set(JvmTarget.JVM_11)
        }
    }

    tasks.withType(JacocoReport).configureEach {
        reports {
            xml.required = false
            csv.required = false
            html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
        }
    }

    tasks.withType(Test).configureEach {
        testLogging {
            exceptionFormat "full"
            showCauses true
            showExceptions true
            showStackTraces true
            showStandardStreams true
            events = ["passed", "skipped", "failed"]
        }
        finalizedBy(jacocoTestReport)
    }
}

project(":commons") {
    dependencies {
        implementation project(":core")

        implementation 'org.lwjgl:lwjgl-assimp:3.3.1'
        implementation 'org.lwjgl:lwjgl-assimp:3.3.1:natives-linux'

        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        implementation "com.github.mgsx-dev.gdx-gltf:gltf:$gltfVersion"
        implementation "net.onedaybeard.artemis:artemis-odb:2.3.0"
        implementation 'net.onedaybeard.artemis:artemis-odb-serializer-json:2.3.0'

        implementation 'org.locationtech.jts:jts-core:1.19.0'

        testImplementation libs.junit
        testImplementation libs.mockito_core
        testImplementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        testImplementation libs.logback_classic

    }

//
//    pitest {
//        targetClasses = ['com.mbrlabs.*']  //by default "${project.group}.*"
//        pitestVersion = '1.9.0' //not needed when a default PIT version should be used
//        threads = 4
//        outputFormats = ['HTML']
//        timestampedReports = false
//    }

//    build.dependsOn 'pitest'
}

project(":core") {

    dependencies {

        implementation 'org.lwjgl:lwjgl-assimp:3.3.1'
        implementation 'org.lwjgl:lwjgl-assimp:3.3.1:natives-linux'
        implementation 'org.lwjgl:lwjgl-assimp:3.3.1:natives-macos'
        implementation 'org.lwjgl:lwjgl-assimp:3.3.1:natives-macos-arm64'
        implementation 'org.lwjgl:lwjgl-assimp:3.3.1:natives-windows'

        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        implementation "com.github.mgsx-dev.gdx-gltf:gltf:$gltfVersion"
        implementation "net.onedaybeard.artemis:artemis-odb:2.3.0"
        implementation 'net.onedaybeard.artemis:artemis-odb-serializer-json:2.3.0'

        implementation 'org.locationtech.jts:jts-core:1.19.0'

        testImplementation libs.junit
        testImplementation libs.mockito_core
        testImplementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        testImplementation libs.logback_classic

    }
}

project(":editor") {
    apply plugin: "kotlin"

    dependencies {
        implementation project(":commons")
        implementation project(":core")

        // Yep, we will use spring in desktop application =)
        implementation 'org.springframework:spring-context:5.3.23'
        implementation 'javax.annotation:javax.annotation-api:1.3.2'

        // logging
        implementation libs.logback_classic
        implementation 'io.github.microutils:kotlin-logging-jvm:2.1.23'

        // Kotlin libs
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

        // libGDX
        implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"

        // gdx-freetype
        implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
        implementation "com.github.mgsx-dev.gdx-gltf:gltf:$gltfVersion"
        implementation "net.onedaybeard.artemis:artemis-odb:2.3.0"

        // other
        implementation "com.kotcrab.vis:vis-ui:$visuiVersion"
        implementation "com.esotericsoftware:kryo:$kryoVersion"

        // tests
        testImplementation libs.junit
        testImplementation libs.mockito_core
        testImplementation 'org.springframework:spring-test:5.3.23'
    }
}