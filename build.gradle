buildscript {
    ext.kotlinVersion = '1.7.10'
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"
    apply plugin: "jacoco"
    //todo add checkstyle
//    apply plugin: 'checkstyle'

    tasks.withType(Test) {
        testLogging {
            exceptionFormat "full"
            showCauses true
            showExceptions true
            showStackTraces true
            showStandardStreams true
            events = ["passed", "skipped", "failed"]
        }
    }

    ext {
        appName = "Mundus"
        gdxVersion = '1.11.0'
        visuiVersion = '1.5.0'
        kryoVersion = '5.2.0'
        junitVersion = '4.13.2'
        mockitoVersion = '1.10.19'
        commonsIoVersion = '2.5'
        commonsLangVersion = '3.12.0'
        gltfVersion = 'master-SNAPSHOT'

        ktxVersion = '1.10.0-b2'
    }

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url 'https://jitpack.io' }
    }
}

project(":commons") {
    apply plugin: "java"

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.24'
        annotationProcessor 'org.projectlombok:lombok:1.18.24'

        testCompileOnly 'org.projectlombok:lombok:1.18.24'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

        implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.4'

        implementation 'org.mapstruct:mapstruct:1.5.2.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'

        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        implementation "com.github.mgsx-dev.gdx-gltf:gltf:$gltfVersion"
        implementation group: 'com.badlogicgames.ashley', name: 'ashley', version: '1.7.4'

        implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
        implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
        implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
        implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0'

        implementation 'org.locationtech.jts:jts-core:1.19.0'

        testImplementation "junit:junit:$junitVersion"
        testImplementation 'org.mockito:mockito-core:4.8.0'
    }


    jacocoTestReport {
        dependsOn test // tests are required to run before generating the report
        reports {
            xml.required = false
            csv.required = false
            html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
        }
    }

    test {
        finalizedBy jacocoTestReport
    }
}

project(":editor") {
    apply plugin: "java"
    apply plugin: "kotlin"

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    dependencies {
        implementation project(":commons")

        compileOnly 'org.projectlombok:lombok:1.18.24'
        annotationProcessor 'org.projectlombok:lombok:1.18.24'

        testCompileOnly 'org.projectlombok:lombok:1.18.24'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

        // Yep, we will use spring in desktop application =)
        implementation 'org.springframework:spring-context:5.3.23'
        implementation 'javax.annotation:javax.annotation-api:1.3.2'

        // Do normal json serialization
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4'
        implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.4'

        // logging
        implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0'
        implementation 'ch.qos.logback:logback-classic:1.4.0'
        implementation 'io.github.microutils:kotlin-logging-jvm:2.1.23'

        // Kotlin libs
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

        // libGDX
        implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"

        // gdx-freetype
        implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
        implementation "com.github.mgsx-dev.gdx-gltf:gltf:$gltfVersion"
        implementation group: 'com.badlogicgames.ashley', name: 'ashley', version: '1.7.4'

        // commons
        implementation "org.apache.commons:commons-lang3:$commonsLangVersion"
        implementation "commons-io:commons-io:$commonsIoVersion"

        // other
        implementation "com.kotcrab.vis:vis-ui:$visuiVersion"
        implementation "com.esotericsoftware:kryo:$kryoVersion"

        // tests
        testImplementation "junit:junit:$junitVersion"
        testImplementation 'org.mockito:mockito-core:4.8.0'
        testImplementation 'org.springframework:spring-test:5.3.23'
    }


    jacocoTestReport {
        dependsOn test // tests are required to run before generating the report
        reports {
            xml.required = false
            csv.required = false
            html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
        }
    }

    test {
        finalizedBy jacocoTestReport
    }
}

tasks.eclipse.doLast {
    delete ".project"
}
