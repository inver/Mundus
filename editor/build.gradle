import java.text.SimpleDateFormat

apply plugin: "kotlin"

sourceSets.main.java.srcDirs = ["src/main", "assets"]
sourceSets.main.resources.srcDirs = ["src/main", "assets"]
sourceSets.test.java.srcDirs = ["src/test/java", "src/test/kotlin"]

project.ext.mainClassName = "com.mbrlabs.mundus.editor.Main"
project.ext.assetsDir = new File("assets")

tasks.register("run", JavaExec) {
    dependsOn(classes)
    mainClass = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue(true)

    if (System.properties['os.name'].toLowerCase().contains('mac')) {
        jvmArgs "-XstartOnFirstThread"
        jvmArgs "-Djava.awt.headless=true"
    }
}

tasks.register("distEditor", Jar) {
    archiveBaseName = project.appName
    archiveVersion = project.appVersion

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}

tasks.withType(Jar).configureEach {
    manifest {
        attributes 'Main-Class': project.mainClassName
        attributes "AppName": project.appName
        attributes "Version": project.appVersion
    }
}

tasks.withType(ProcessResources).configureEach {
    doLast {
        new File("${project.buildDir}/resources/main", "version.properties").text = """appName=${project.appName}
appVersion=${project.appVersion}
buildTime=${new SimpleDateFormat("dd-MM-yyyy HH:mm:ss").format(new Date())}
"""
    }
}

dependencies {
    implementation project(":commons")
    implementation project(":core")

    implementation libs.groovy
    implementation libs.groovy_jsr223

    // Yep, we will use spring in desktop application =)
    implementation 'org.springframework:spring-context:5.3.23'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // logging
    implementation libs.logback_classic
    implementation 'io.github.microutils:kotlin-logging-jvm:2.1.23'

    // Kotlin libs
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    // libGDX
    implementation libs.gdx_backend_lwjgl3
    implementation libs.gdx_platform

    // gdx-freetype
    implementation libs.gdx_freetype
    implementation libs.gdx_freetype_platform
    implementation "com.github.mgsx-dev.gdx-gltf:gltf:$gltfVersion"
    implementation "net.onedaybeard.artemis:artemis-odb:2.3.0"

    // other
    implementation "com.kotcrab.vis:vis-ui:$visuiVersion"
    implementation "com.esotericsoftware:kryo:$kryoVersion"

    // tests
    testImplementation libs.junit_jupiter_engine
    testImplementation libs.mockito_core
    testImplementation 'org.springframework:spring-test:5.3.23'
}

build {
    finalizedBy("distEditor")
}